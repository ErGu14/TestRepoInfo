// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartyApp.Data.Concrete;

#nullable disable

namespace PartyApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241206093444_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PartyApp.Entity.Concrete.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Invitations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Noel Partisi"
                        },
                        new
                        {
                            Id = 2,
                            EventDate = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Doğum Günü Partisi"
                        });
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.InvitationParticipant", b =>
                {
                    b.Property<int>("InvitationId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.HasKey("InvitationId", "ParticipantId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("InvitationParticipants");

                    b.HasData(
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 3
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 7
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 1
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 9
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 5
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 2
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 8
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 4
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 11
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 6
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 10
                        });
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("NumberOfPeople")
                        .HasColumnType("tinyint");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Participants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = (byte)42,
                            Email = "q7@gmail.com",
                            FullName = "Ricardo Quaresma",
                            NumberOfPeople = (byte)1,
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 2,
                            Age = (byte)38,
                            Email = "cr7@gmail.com",
                            FullName = "Cristiano Ronaldo",
                            NumberOfPeople = (byte)3,
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = 3,
                            Age = (byte)36,
                            Email = "lm10@gmail.com",
                            FullName = "Lionel Messi",
                            NumberOfPeople = (byte)4,
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            Id = 4,
                            Age = (byte)32,
                            Email = "njr10@gmail.com",
                            FullName = "Neymar Jr.",
                            NumberOfPeople = (byte)2,
                            PhoneNumber = "1122334455"
                        },
                        new
                        {
                            Id = 5,
                            Age = (byte)25,
                            Email = "km7@gmail.com",
                            FullName = "Kylian Mbappe",
                            NumberOfPeople = (byte)1,
                            PhoneNumber = "6677889900"
                        },
                        new
                        {
                            Id = 6,
                            Age = (byte)42,
                            Email = "zi9@gmail.com",
                            FullName = "Zlatan Ibrahimovic",
                            NumberOfPeople = (byte)5,
                            PhoneNumber = "5566778899"
                        },
                        new
                        {
                            Id = 7,
                            Age = (byte)38,
                            Email = "sr4@gmail.com",
                            FullName = "Sergio Ramos",
                            NumberOfPeople = (byte)3,
                            PhoneNumber = "4455667788"
                        },
                        new
                        {
                            Id = 8,
                            Age = (byte)38,
                            Email = "lm10@gmail.com",
                            FullName = "Luka Modric",
                            NumberOfPeople = (byte)2,
                            PhoneNumber = "2233445566"
                        },
                        new
                        {
                            Id = 9,
                            Age = (byte)32,
                            Email = "kdb17@gmail.com",
                            FullName = "Kevin De Bruyne",
                            NumberOfPeople = (byte)4,
                            PhoneNumber = "3344556677"
                        },
                        new
                        {
                            Id = 10,
                            Age = (byte)36,
                            Email = "rl9@gmail.com",
                            FullName = "Robert Lewandowski",
                            NumberOfPeople = (byte)3,
                            PhoneNumber = "7788990011"
                        },
                        new
                        {
                            Id = 11,
                            Age = (byte)32,
                            Email = "ms11@gmail.com",
                            FullName = "Mohamed Salah",
                            NumberOfPeople = (byte)2,
                            PhoneNumber = "9988776655"
                        });
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.InvitationParticipant", b =>
                {
                    b.HasOne("PartyApp.Entity.Concrete.Invitation", "Invitation")
                        .WithMany("InvitationParticipants")
                        .HasForeignKey("InvitationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PartyApp.Entity.Concrete.Participant", "Participant")
                        .WithMany("InvitationParticipants")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invitation");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.Invitation", b =>
                {
                    b.Navigation("InvitationParticipants");
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.Participant", b =>
                {
                    b.Navigation("InvitationParticipants");
                });
#pragma warning restore 612, 618
        }
    }
}
